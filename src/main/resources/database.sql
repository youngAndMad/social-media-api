DROP TABLE IF EXISTS `address`;
DROP TABLE IF EXISTS `black_list`;
DROP TABLE IF EXISTS `channel`;
DROP TABLE IF EXISTS `chat`;
DROP TABLE IF EXISTS `friends`;
DROP TABLE IF EXISTS `image`;
DROP TABLE IF EXISTS `message`;
DROP TABLE IF EXISTS `post`;
DROP TABLE IF EXISTS `post_images`;
DROP TABLE IF EXISTS `users`;
DROP TABLE IF EXISTS `users_chats`;

CREATE TABLE address
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    country      VARCHAR(255),
    city         VARCHAR(255),
    street       VARCHAR(255),
    house_number INTEGER,
    CONSTRAINT pk_address PRIMARY KEY (id)
);

CREATE TABLE image
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    original_name VARCHAR(255),
    size          BIGINT,
    content_type  VARCHAR(255),
    bytes         BYTEA,
    CONSTRAINT pk_image PRIMARY KEY (id)
);

CREATE TABLE black_list
(
    first_user_id  INTEGER NOT NULL,
    second_user_id INTEGER NOT NULL
);

CREATE TABLE friends
(
    first_user_id  INTEGER NOT NULL,
    second_user_id INTEGER NOT NULL
);

CREATE TABLE users
(
    id                 INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name         VARCHAR(255),
    last_name          VARCHAR(255),
    email              VARCHAR(255),
    password           VARCHAR(255),
    age                INTEGER,
    is_private_account BOOLEAN,
    code               VARCHAR(255),
    gender             VARCHAR(255),
    role               VARCHAR(255),
    image_id           INTEGER,
    address_id         INTEGER,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE users_chats
(
    user_id  INTEGER NOT NULL,
    chats_id INTEGER NOT NULL,
    CONSTRAINT pk_users_chats PRIMARY KEY (user_id, chats_id)
);

ALTER TABLE users
    ADD CONSTRAINT uc_74165e195b2f7b25de690d14a UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES address (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_IMAGE FOREIGN KEY (image_id) REFERENCES image (id);

ALTER TABLE black_list
    ADD CONSTRAINT fk_blalis_on_first_user FOREIGN KEY (first_user_id) REFERENCES users (id);

ALTER TABLE black_list
    ADD CONSTRAINT fk_blalis_on_second_user FOREIGN KEY (second_user_id) REFERENCES users (id);

ALTER TABLE friends
    ADD CONSTRAINT fk_friends_on_first_user FOREIGN KEY (first_user_id) REFERENCES users (id);

ALTER TABLE friends
    ADD CONSTRAINT fk_friends_on_second_user FOREIGN KEY (second_user_id) REFERENCES users (id);

CREATE TABLE chat
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE,
    last_message VARCHAR(255),
    type         VARCHAR(255),
    CONSTRAINT pk_chat PRIMARY KEY (id)
);

ALTER TABLE users_chats
    ADD CONSTRAINT fk_usecha_on_chat FOREIGN KEY (chats_id) REFERENCES chat (id);

ALTER TABLE users_chats
    ADD CONSTRAINT fk_usecha_on_user FOREIGN KEY (user_id) REFERENCES users (id);

CREATE TABLE channel
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(255),
    content     VARCHAR(255),
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    owner_id    INTEGER,
    image_id    INTEGER,
    CONSTRAINT pk_channel PRIMARY KEY (id)
);

ALTER TABLE channel
    ADD CONSTRAINT FK_CHANNEL_ON_IMAGE FOREIGN KEY (image_id) REFERENCES image (id);

ALTER TABLE channel
    ADD CONSTRAINT FK_CHANNEL_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (id);

CREATE TABLE message
(
    id               INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text             VARCHAR(255),
    sent_at          TIMESTAMP WITHOUT TIME ZONE,
    sender_full_name VARCHAR(255),
    sender_id        INTEGER,
    chat_id          INTEGER,
    CONSTRAINT pk_message PRIMARY KEY (id)
);

ALTER TABLE message
    ADD CONSTRAINT FK_MESSAGE_ON_CHAT FOREIGN KEY (chat_id) REFERENCES chat (id);

ALTER TABLE message
    ADD CONSTRAINT FK_MESSAGE_ON_SENDER FOREIGN KEY (sender_id) REFERENCES users (id);

CREATE TABLE post
    (
        id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        title      VARCHAR(255),
        body       VARCHAR(255),
        channel_id INTEGER,
        CONSTRAINT pk_post PRIMARY KEY (id)
    );

    CREATE TABLE post_images
    (
        post_id   INTEGER NOT NULL,
        images_id INTEGER NOT NULL
    );

    ALTER TABLE post_images
        ADD CONSTRAINT uc_post_images_images UNIQUE (images_id);

    ALTER TABLE post
        ADD CONSTRAINT FK_POST_ON_CHANNEL FOREIGN KEY (channel_id) REFERENCES channel (id);

    ALTER TABLE post_images
        ADD CONSTRAINT fk_posima_on_image FOREIGN KEY (images_id) REFERENCES image (id);

    ALTER TABLE post_images
        ADD CONSTRAINT fk_posima_on_post FOREIGN KEY (post_id) REFERENCES post (id);

CREATE TABLE notification
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    message  VARCHAR(255),
    sent_at  TIMESTAMP WITHOUT TIME ZONE,
    checked  BOOLEAN,
    owner_id INTEGER,
    CONSTRAINT pk_notification PRIMARY KEY (id)
);

ALTER TABLE notification
    ADD CONSTRAINT FK_NOTIFICATION_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (id);

    CREATE TABLE comment
    (
        id           INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        commented_at TIMESTAMP WITHOUT TIME ZONE,
        comment      VARCHAR(255),
        sender_id    INTEGER,
        post_id      INTEGER,
        CONSTRAINT pk_comment PRIMARY KEY (id)
    );

    ALTER TABLE comment
        ADD CONSTRAINT FK_COMMENT_ON_POST FOREIGN KEY (post_id) REFERENCES post (id);

    ALTER TABLE comment
        ADD CONSTRAINT FK_COMMENT_ON_SENDER FOREIGN KEY (sender_id) REFERENCES users (id);

